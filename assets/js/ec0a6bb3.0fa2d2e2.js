"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[407],{8214:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"api/Inventory/v1.1","title":"","description":"Inventory Management API","source":"@site/docs/api/Inventory/v1.1.md","sourceDirName":"api/Inventory","slug":"/api/Inventory/v1.1","permalink":"/api/api/Inventory/v1.1","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"","pagination_next":null,"pagination_prev":null},"sidebar":"apiSidebar"}');var s=n(4848),i=n(8453);const d={title:"",pagination_next:null,pagination_prev:null},l=void 0,o={},a=[{value:"<span>Authentication - Login API</span>",id:"authentication---login-api",level:2},{value:"Endpoint Details",id:"endpoint-details",level:3},{value:"Request Body",id:"request-body",level:3},{value:"Response Body",id:"response-body",level:3},{value:"<span>Create Inventory API</span>",id:"create-inventory-api",level:2},{value:"Graph API",id:"graph-api",level:3},{value:"Properties",id:"properties",level:3},{value:"Request Body",id:"request-body-1",level:3},{value:"Response Body",id:"response-body-1",level:3},{value:"Errors",id:"errors",level:3},{value:"Error Response Examples",id:"error-response-examples",level:3},{value:"Expired Token",id:"expired-token",level:4},{value:"Invalid token",id:"invalid-token",level:4},{value:"Missing Authorization Header",id:"missing-authorization-header",level:4},{value:"Additional Error Messages",id:"additional-error-messages",level:3},{value:"TrackerSerial in Payload",id:"trackerserial-in-payload",level:4},{value:"Item with Same ID Already Exists",id:"item-with-same-id-already-exists",level:4},{value:"Duplicate TrackerSerial in Payload",id:"duplicate-trackerserial-in-payload",level:4},{value:"<span>Update Inventory API</span>",id:"update-inventory-api",level:2},{value:"Graph API",id:"graph-api-1",level:3},{value:"Properties",id:"properties-1",level:3},{value:"Request Body",id:"request-body-2",level:3},{value:"Response Body",id:"response-body-2",level:3},{value:"Errors",id:"errors-1",level:3},{value:"For Expired Token",id:"for-expired-token",level:4},{value:"For Invalid Token",id:"for-invalid-token",level:4},{value:"Missing Authorization Header",id:"missing-authorization-header-1",level:4},{value:"Additional 200-Level Errors",id:"additional-200-level-errors",level:3},{value:"<span>Create Item Set API</span>",id:"create-item-set-api",level:2},{value:"Endpoint Details",id:"endpoint-details-1",level:3},{value:"Request Body",id:"request-body-3",level:3},{value:"<span>Create Inventory Item Types API</span>",id:"create-inventory-item-types-api",level:2},{value:"Request Body",id:"request-body-4",level:3},{value:"<span>Update Inventory Item Types API</span>",id:"update-inventory-item-types-api",level:2},{value:"Request Body",id:"request-body-5",level:3},{value:"<span>Get Inventory Items API</span>",id:"get-inventory-items-api",level:2},{value:"Request Body",id:"request-body-6",level:3},{value:"<span>List Inventory Item Type Counts API</span>",id:"list-inventory-item-type-counts-api",level:2},{value:"Request Body",id:"request-body-7",level:3},{value:"<span>Cycle Count Event</span>",id:"cycle-count-event",level:2},{value:"Example Payload",id:"example-payload",level:3},{value:"<span>Upload CSV API</span>",id:"upload-csv-api",level:2},{value:"Endpoint Details",id:"endpoint-details-2",level:3},{value:"Request Properties",id:"request-properties",level:3},{value:"Required CSV Columns",id:"required-csv-columns",level:3},{value:"Stock Threshold",id:"stock-threshold",level:4},{value:"Stock on Order",id:"stock-on-order",level:4},{value:"Request Body Example (General Upload)",id:"request-body-example-general-upload",level:3},{value:"Request Body Example (Stock Threshold Upload)",id:"request-body-example-stock-threshold-upload",level:3},{value:"Request Body Example (Stock on Order Upload)",id:"request-body-example-stock-on-order-upload",level:3},{value:"Response Body Example",id:"response-body-example",level:3},{value:"<span>Inventory Management Postman Collection</span>",id:"inventory-management-postman-collection",level:2},{value:"<span>Errors</span>",id:"errors-2",level:2},{value:"Example Error Responses",id:"example-error-responses",level:3},{value:"Expired Token:",id:"expired-token-1",level:4},{value:"Invalid Token:",id:"invalid-token-1",level:4},{value:"Missing Required Field (<code>fileContent</code>)",id:"missing-required-field-filecontent",level:4}];function c(t){const e={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("h1",{style:{color:"#0D8CFF"},children:"Inventory Management API"}),"\n",(0,s.jsx)("h2",{children:"Version 1.6 \u2014 January 2025"}),"\n",(0,s.jsx)(e.h2,{id:"authentication---login-api",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Authentication - Login API"})}),"\n",(0,s.jsx)(e.p,{children:"To access the GraphQL APIs, users must first authenticate using the Xemelgo Login REST API."}),"\n",(0,s.jsx)(e.h3,{id:"endpoint-details",children:"Endpoint Details"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"URL:"})," ",(0,s.jsx)(e.code,{children:"https://rest.api.xemelgo.com/login"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Method:"})," ",(0,s.jsx)(e.code,{children:"POST"})]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"request-body",children:"Request Body"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "email": "base64_encoded_email",\n  "password": "base64_encoded_password"\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"response-body",children:"Response Body"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "AccessToken": "$accessToken",\n  "ExpiresIn": 480,\n  "TokenType": "Bearer",\n  "RefreshToken": "$refreshToken",\n  "IdToken": "$idToken"\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["Use the ",(0,s.jsx)(e.code,{children:"$idToken"})," as the authorization header for all API requests."]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"create-inventory-api",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Create Inventory API"})}),"\n",(0,s.jsx)(e.p,{children:"Create Inventory API allows to create multiple inventory items at the same time and associate the items to the respective RFID tracker serial number."}),"\n",(0,s.jsx)(e.h3,{id:"graph-api",children:"Graph API"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"URL:"})," ",(0,s.jsx)(e.code,{children:"https://api.xemelgo.com/graphql"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Method:"})," ",(0,s.jsx)(e.code,{children:"POST"})]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Property"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Description"}),(0,s.jsx)(e.th,{children:"Required"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"id"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Serial number of the item. Can be same as the RFID tag number in case the items are not serialized"}),(0,s.jsx)(e.td,{children:"Yes"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"partId"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"SKU/product/UPC number representing the type of the product"}),(0,s.jsx)(e.td,{children:"Yes"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"trackerSerial"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"RFID tag number for the item"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"description"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Description if any for the item"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"name"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Name of the item"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"lotNumber"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Lot number of the lot the item is a part of"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"expirationDate"})}),(0,s.jsx)(e.td,{children:"AWSTimestamp in milliseconds"}),(0,s.jsx)(e.td,{children:"Date to define the expiration date for an item"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"locationId"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Location of the item, that the item currently is being added to"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"customProperties"})}),(0,s.jsx)(e.td,{children:"AWSJSON"}),(0,s.jsx)(e.td,{children:"Additional properties that a customer may want to specify for the item"}),(0,s.jsx)(e.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)("h3",{children:"Headers"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Authorization \u2013"})," ",(0,s.jsx)(e.code,{children:"$idToken"})]}),"\n",(0,s.jsx)(e.h3,{id:"request-body-1",children:"Request Body"}),"\n",(0,s.jsx)(e.p,{children:"Input can consist of multiple JSON objects of unique items."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  createInventory(input: {\n    inventory: [\n      {\n        id: "item 1",\n        partId: "SKU 1",\n        trackerSerial: "12345679",\n        comments: "This is testing payload",\n        locationId: "Warehouse",\n        customProperties: "{\\"thickness\\": \\"7/1\\", \\"width\\": \\"2-3/4\\", \\"length\\": \\"41.75\\", \\"quantity\\": 286, \\"po_number\\": 123453}"\n      }\n    ]\n  }) {\n    inventoryIds\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"StatusCode"})," - 200"]}),"\n",(0,s.jsx)(e.h3,{id:"response-body-1",children:"Response Body"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "createInventory": {\n      "inventoryIds": [\n        "item 1"\n      ]\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"Response consists of a list of all inventory items that were created"}),"\n",(0,s.jsx)(e.h3,{id:"errors",children:"Errors"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Error"}),(0,s.jsx)(e.th,{children:"Error code"}),(0,s.jsx)(e.th,{children:"Exception"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"Expired token"})}),(0,s.jsx)(e.td,{children:"401"}),(0,s.jsx)(e.td,{children:"Unauthorized"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"Invalid token"})}),(0,s.jsx)(e.td,{children:"401"}),(0,s.jsx)(e.td,{children:"Unauthorized"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"Missing Authorization Header"})}),(0,s.jsx)(e.td,{children:"401"}),(0,s.jsx)(e.td,{children:"Unauthorized"})]})]})]}),"\n",(0,s.jsx)(e.h3,{id:"error-response-examples",children:"Error Response Examples"}),"\n",(0,s.jsx)(e.h4,{id:"expired-token",children:"Expired Token"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "errorType": "UnauthorizedException",\n      "message": "Token has expired."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h4,{id:"invalid-token",children:"Invalid token"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "errorType": "UnauthorizedException",\n      "message": "Unable to parse JWT token"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h4,{id:"missing-authorization-header",children:"Missing Authorization Header"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "errorType": "UnauthorizedException",\n      "message": "User is not authorized to make this call."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"additional-error-messages",children:"Additional Error Messages"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Error"}),(0,s.jsx)(e.th,{children:"Error code"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Duplicate trackerSerial in payload"}),(0,s.jsx)(e.td,{children:"200"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"TrackerSerial already exists"}),(0,s.jsx)(e.td,{children:"200"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Item with same serial id already exist"}),(0,s.jsx)(e.td,{children:"200"})]})]})]}),"\n",(0,s.jsx)(e.h4,{id:"trackerserial-in-payload",children:"TrackerSerial in Payload"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "createInventory": {\n      "inventoryIds": []\n    }\n  },\n  "errors": [\n    {\n      "path": ["createInventory"],\n      "data": null,\n      "errorType": "ResourceAlreadyExistError",\n      "errorInfo": null,\n      "message": "Item \'1234\' has tracker serial \'12345679\' that already exists. Use \'reuseTrackerSerial\' if you want to reuse this tracker serial."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h4,{id:"item-with-same-id-already-exists",children:"Item with Same ID Already Exists"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "createInventory": {\n      "inventoryIds": []\n    }\n  },\n  "errors": [\n    {\n      "path": ["createInventory"],\n      "data": null,\n      "errorType": "PayloadValidationError",\n      "errorInfo": null,\n      "message": "Duplicate value [item1] found in the \'id\' property. Please make sure each item has a unique id."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h4,{id:"duplicate-trackerserial-in-payload",children:"Duplicate TrackerSerial in Payload"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "createInventory": {\n      "inventoryIds": []\n    }\n  },\n  "errors": [\n    {\n      "path": ["createInventory"],\n      "data": null,\n      "errorType": "PayloadValidationError",\n      "errorInfo": null,\n      "message": "Duplicate value [12345679] found in the \'trackerSerial\' property. Please make sure each item has a unique trackerSerial."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"update-inventory-api",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Update Inventory API"})}),"\n",(0,s.jsx)(e.p,{children:"Update Inventory API allows to update different properties of the inventory items including updating the trackerSerial, item id or other properties."}),"\n",(0,s.jsx)(e.h3,{id:"graph-api-1",children:"Graph API"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"URL:"})," ",(0,s.jsx)(e.code,{children:"https://api.xemelgo.com/graphql"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Method:"})," ",(0,s.jsx)(e.code,{children:"POST"})]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"properties-1",children:"Properties"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Property"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Description"}),(0,s.jsx)(e.th,{children:"Required"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"id"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Serial number of the item. Can be same as the RFID tag number in case the items are not serialized"}),(0,s.jsx)(e.td,{children:"Yes"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"partId"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"SKU/product/UPC number representing the type of the product"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"trackerSerial"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"RFID tag number for the item"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"description"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Description if any for the item"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"name"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Name of the item"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"lotNumber"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Lot number of the lot the item is a part of"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"expirationDate"})}),(0,s.jsx)(e.td,{children:"AWSTimestamp in milliseconds"}),(0,s.jsx)(e.td,{children:"Date to define the expiration date for an item"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"locationId"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Location of the item, that the item currently is being added to"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"customProperties"})}),(0,s.jsx)(e.td,{children:"AWSJSON"}),(0,s.jsx)(e.td,{children:"Additional properties that a customer may want to specify for the item"}),(0,s.jsx)(e.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)("h3",{children:"Headers"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Authorization \u2013"})," ",(0,s.jsx)(e.code,{children:"$idToken"})]}),"\n",(0,s.jsx)(e.h3,{id:"request-body-2",children:"Request Body"}),"\n",(0,s.jsx)(e.p,{children:"Input can consist of multiple JSON objects of unique items."}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  updateInventory(input: {\n    inventory: [\n      {\n        id: "item 1",\n        updates: {\n          trackerSerial: "98765432",\n          comments: "This is an updated payload",\n          locationId: "Warehouse",\n          customProperties: "{\\"thickness\\": \\"7/1\\", \\"width\\": \\"2-3/4\\", \\"length\\": \\"41.75\\", \\"quantity\\": 286, \\"po_number\\": 12345}"\n        }\n      }\n    ]\n  }) {\n    inventory {\n      id\n      part {\n        id\n      }\n      trackerSerial\n      customProperties\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"StatusCode"})," - 200"]}),"\n",(0,s.jsx)(e.h3,{id:"response-body-2",children:"Response Body"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "updateInventory": {\n      "inventory": [\n        {\n          "id": "item 1",\n          "part": {\n            "id": "SKU 1"\n          },\n          "trackerSerial": "98765432",\n          "customProperties": "{\\"species\\":\\"HW\\",\\"received_date\\":1744779990000,\\"grade\\":\\"grade\\",\\"width\\":\\"2-3/4\\",\\"thickness\\":\\"7/1\\",\\"length\\":\\"41.75\\",\\"quantity\\":300,\\"vendor\\":\\"Easter foreign products\\",\\"po_number\\":12345}"\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"Response consists of a list of updated inventory items with updated properties."}),"\n",(0,s.jsx)(e.h3,{id:"errors-1",children:"Errors"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Error"}),(0,s.jsx)(e.th,{children:"Error code"}),(0,s.jsx)(e.th,{children:"Exception"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Expired token"}),(0,s.jsx)(e.td,{children:"401"}),(0,s.jsx)(e.td,{children:"Unauthorized"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Invalid token"}),(0,s.jsx)(e.td,{children:"401"}),(0,s.jsx)(e.td,{children:"Unauthorized"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Missing Authorization Header"}),(0,s.jsx)(e.td,{children:"401"}),(0,s.jsx)(e.td,{children:"Unauthorized"})]})]})]}),"\n",(0,s.jsx)(e.h4,{id:"for-expired-token",children:"For Expired Token"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "errorType": "UnauthorizedException",\n      "message": "Token has expired."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h4,{id:"for-invalid-token",children:"For Invalid Token"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "errorType": "UnauthorizedException",\n      "message": "Unable to parse JWT token"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h4,{id:"missing-authorization-header-1",children:"Missing Authorization Header"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "errorType": "UnauthorizedException",\n      "message": "User is not authorized to make this call."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"additional-200-level-errors",children:"Additional 200-Level Errors"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Error"}),(0,s.jsx)(e.th,{children:"Error code"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.td,{children:["Duplicate ",(0,s.jsx)(e.code,{children:"trackerSerial"})," in payload"]}),(0,s.jsx)(e.td,{children:"200"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.td,{children:[(0,s.jsx)(e.code,{children:"trackerSerial"})," already exists"]}),(0,s.jsx)(e.td,{children:"200"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.td,{children:["Item with same serial ",(0,s.jsx)(e.code,{children:"id"})," already exists"]}),(0,s.jsx)(e.td,{children:"200"})]})]})]}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"create-item-set-api",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Create Item Set API"})}),"\n",(0,s.jsx)(e.h3,{id:"endpoint-details-1",children:"Endpoint Details"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"URL:"})," ",(0,s.jsx)(e.code,{children:"https://api.xemelgo.com/graphql"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Method:"})," ",(0,s.jsx)(e.code,{children:"POST"})]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"request-body-3",children:"Request Body"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  createItemSet(\n    input: [\n      {\n        tracker_serial: "2024111100000001",\n        item_number: "Item-123",\n        name: "Item Name",\n        category: "Category",\n        expiry_date: 1721310198000,\n        onboarding_location: "Warehouse A"\n      }\n    ]\n  ) {\n    tracker_serials\n  }\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"create-inventory-item-types-api",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Create Inventory Item Types API"})}),"\n",(0,s.jsx)(e.h3,{id:"request-body-4",children:"Request Body"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  createInventoryParts(\n    input: {\n      inputlist: [\n        {\n          id: "STTC-125-PK-1",\n          number: "STTC-125",\n          unit: "PC",\n          quantity: 1,\n          customProperties: "{\\"color_ts\\":\\"Red\\"}"\n        }\n      ]\n    }\n  ) {\n    partIds\n  }\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"update-inventory-item-types-api",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Update Inventory Item Types API"})}),"\n",(0,s.jsx)(e.h3,{id:"request-body-5",children:"Request Body"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  updateInventoryParts(\n    input: {\n      inputlist: [\n        {\n          id: "STTC-125-PK-1",\n          number: "STTC-125-X"\n        }\n      ]\n    }\n  ) {\n    partIds\n  }\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"get-inventory-items-api",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Get Inventory Items API"})}),"\n",(0,s.jsx)(e.h3,{id:"request-body-6",children:"Request Body"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:"query {\n  inventory(input: { filter: null, nextToken: null }) {\n    inventory {\n      id\n      trackerSerial\n      state\n      location {\n        id\n        name\n      }\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"list-inventory-item-type-counts-api",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"List Inventory Item Type Counts API"})}),"\n",(0,s.jsx)(e.h3,{id:"request-body-7",children:"Request Body"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:"query inventoryPartLocationMetrics ($filter: String, $nextToken: String) {\n  inventoryPartLocationMetrics(input: {filter: $filter, nextToken: $nextToken}) {\n    inventoryParts {\n      totalCount\n      location {\n        id\n        name\n      }\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"cycle-count-event",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Cycle Count Event"})}),"\n",(0,s.jsx)(e.p,{children:"The cycle count event payload contains a list of SKUs and their on-hand and missing counts."}),"\n",(0,s.jsx)(e.h3,{id:"example-payload",children:"Example Payload"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "id": "bc87d998-7d57-426e-ab71-b359f3c367ab",\n  "eventType": "CYCLE_COUNT",\n  "locationId": "101",\n  "timestamp": 1721310198000,\n  "inventoryParts": [\n    {\n      "id": "197217325306",\n      "name": "GS014TP-I271-2",\n      "onhandCount": 10,\n      "missingCount": 2\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"upload-csv-api",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Upload CSV API"})}),"\n",(0,s.jsx)(e.p,{children:"The Upload CSV API allows uploading CSV files to be processed by Xemelgo to:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.strong,{children:"Create and/or update Item Types"})}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Upload supplemental data"}),", such as Stock on Order for inventory tracking"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Define stock threshold values"})," at different locations"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"endpoint-details-2",children:"Endpoint Details"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"URL:"})," ",(0,s.jsx)(e.code,{children:"https://api.xemelgo.com/graphql"})]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Method:"})," ",(0,s.jsx)(e.code,{children:"POST"})]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"request-properties",children:"Request Properties"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Property"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Description"}),(0,s.jsx)(e.th,{children:"Required"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"fileContent"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"CSV file contents in JSON string format (including headers)"}),(0,s.jsx)(e.td,{children:"Yes"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"fileName"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsxs)(e.td,{children:["Name of the file to be created in Xemelgo (",(0,s.jsx)(e.code,{children:".csv"})," filename)"]}),(0,s.jsx)(e.td,{children:"Yes"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"filePath"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsxs)(e.td,{children:["Path for upload, e.g., ",(0,s.jsx)(e.code,{children:"ItemTypeSync"})]}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"type"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsxs)(e.td,{children:["Type of upload: ",(0,s.jsx)(e.code,{children:"ANY"}),", ",(0,s.jsx)(e.code,{children:"STOCK_ON_ORDER"}),", ",(0,s.jsx)(e.code,{children:"STOCK_THRESHOLD"})]}),(0,s.jsxs)(e.td,{children:["No, defaults to ",(0,s.jsx)(e.code,{children:"ANY"})]})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"batchName"})}),(0,s.jsx)(e.td,{children:"String"}),(0,s.jsx)(e.td,{children:"Group multiple file uploads under a batch name"}),(0,s.jsxs)(e.td,{children:["Required for ",(0,s.jsx)(e.code,{children:"STOCK_ON_ORDER"})]})]})]})]}),"\n",(0,s.jsx)(e.h3,{id:"required-csv-columns",children:"Required CSV Columns"}),"\n",(0,s.jsx)(e.h4,{id:"stock-threshold",children:"Stock Threshold"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Header"}),(0,s.jsx)(e.th,{children:"Value Description"}),(0,s.jsx)(e.th,{children:"Required"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Item Type"}),(0,s.jsx)(e.td,{children:"Item Type ID"}),(0,s.jsx)(e.td,{children:"Yes"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Location"}),(0,s.jsx)(e.td,{children:"Xemelgo location name"}),(0,s.jsx)(e.td,{children:"Yes"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Min"}),(0,s.jsx)(e.td,{children:"Minimum stock level"}),(0,s.jsx)(e.td,{children:"No"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Optimal"}),(0,s.jsx)(e.td,{children:"Optimal stock level"}),(0,s.jsx)(e.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(e.h4,{id:"stock-on-order",children:"Stock on Order"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Header"}),(0,s.jsx)(e.th,{children:"Value Description"}),(0,s.jsx)(e.th,{children:"Required"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Item Type"}),(0,s.jsx)(e.td,{children:"Item Type ID"}),(0,s.jsx)(e.td,{children:"Yes"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Location"}),(0,s.jsx)(e.td,{children:"Xemelgo location name"}),(0,s.jsx)(e.td,{children:"Yes"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Stock on Order"}),(0,s.jsx)(e.td,{children:"Amount of stock on order"}),(0,s.jsx)(e.td,{children:"No"})]})]})]}),"\n",(0,s.jsx)(e.h3,{id:"request-body-example-general-upload",children:"Request Body Example (General Upload)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  uploadCSV(\n    input: {\n      fileContent: "Number,Number,Number\\n123,123,123\\n3333,33123123,3311\\n1333,123331,231233233",\n      fileName: "test-1.csv",\n      filePath: "ItemTypeSync"\n    }\n  ) {\n    result\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"request-body-example-stock-threshold-upload",children:"Request Body Example (Stock Threshold Upload)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  uploadCSV(\n    input: {\n      fileContent: "Item Type,Location,Min,Optimal\\nWigs,Stock Room,10,50\\n",\n      fileName: "StockRoom1_StockThreshold.csv",\n      type: STOCK_THRESHOLD\n    }\n  ) {\n    result\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"request-body-example-stock-on-order-upload",children:"Request Body Example (Stock on Order Upload)"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-graphql",children:'mutation {\n  uploadCSV(\n    input: {\n      fileContent: "Location,Item Type,Stock On Order\\nStockRoom1,Wigs,10\\n",\n      fileName: "StockRoom1_StockOnOrder.csv",\n      type: STOCK_ON_ORDER,\n      batchName: "2024Dec11"\n    }\n  ) {\n    result\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"response-body-example",children:"Response Body Example"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "data": {\n    "uploadCSV": {\n      "result": "File [test-1.csv] has been uploaded to Xemelgo"\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"inventory-management-postman-collection",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Inventory Management Postman Collection"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n\t"info": {\n\t\t"_postman_id": "9ff7a270-cd8d-4387-b935-69242088b115",\n\t\t"name": "Inventory Management Collection",\n\t\t"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",\n\t\t"_exporter_id": "14257901"\n\t},\n\t"item": [\n\t\t{\n\t\t\t"name": "Login",\n\t\t\t"event": [\n\t\t\t\t{\n\t\t\t\t\t"listen": "prerequest",\n\t\t\t\t\t"script": {\n\t\t\t\t\t\t"exec": [\n\t\t\t\t\t\t\t"var emailId = \\"base 64 encoded email\\";",\n\t\t\t\t\t\t\t"var pass = \\"base 64 encoded password\\";",\n\t\t\t\t\t\t\t"",\n\t\t\t\t\t\t\t"pm.environment.set(\\"email\\", btoa(emailId));",\n\t\t\t\t\t\t\t"pm.environment.set(\\"password\\", btoa(pass));"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t"type": "text/javascript",\n\t\t\t\t\t\t"packages": {}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t"listen": "test",\n\t\t\t\t\t"script": {\n\t\t\t\t\t\t"exec": [\n\t\t\t\t\t\t\t"var jsonData = JSON.parse(responseBody);",\n\t\t\t\t\t\t\t"pm.environment.set(\\"token\\", jsonData.IdToken);"\n\t\t\t\t\t\t],\n\t\t\t\t\t\t"type": "text/javascript",\n\t\t\t\t\t\t"packages": {}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "scenario",\n\t\t\t\t\t\t"value": "1",\n\t\t\t\t\t\t"type": "text",\n\t\t\t\t\t\t"disabled": true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "raw",\n\t\t\t\t\t"raw": "{\\n    \\"email\\": \\"{{email}}\\",\\n    \\"password\\": \\"{{password}}\\"\\n}",\n\t\t\t\t\t"options": {\n\t\t\t\t\t\t"raw": {\n\t\t\t\t\t\t\t"language": "json"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://rest.api.xemelgo.com/login",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"rest",\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"login"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "Create Inventory part",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "mutation {\\n    createInventoryParts(\\n        input: {\\n            inputList: [\\n                {\\n                    id : \\"{{identifier}}\\",\\n                    description: \\"{{Description}}\\",\\n                    customProperties: \\"{\\\\\\"sub_location_ts\\\\\\": \\\\\\"{{Bin}}\\\\\\",\\\\\\"customer_part_number_ts\\\\\\": \\\\\\"{{CPN}}\\\\\\"}\\"\\n                }\\n            ]\\n        }\\n    ) {\\n        partIds\\n    }\\n}",\n\t\t\t\t\t\t"variables": ""\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "Update Inventory part",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "mutation {\\n    updateInventoryParts(\\n        input: {\\n            inputList: [\\n                {\\n                    id : \\"{{identifier}}\\",\\n                    customProperties: \\"{\\\\\\"bin_location_ts\\\\\\": \\\\\\"{{bin}}\\\\\\"}\\"\\n                }\\n            ]\\n        }\\n    ) {\\n        partIds\\n    }\\n}",\n\t\t\t\t\t\t"variables": ""\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "List Inventory Parts",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "query inventoryParts ($filter: String, $nextToken: String) {\\n  inventoryParts(input: { filter: $filter, nextToken: $nextToken }) {\\n    inventoryParts {\\n      id\\n      number\\n      name\\n      description\\n      unit\\n      quantity\\n    }\\n    nextToken\\n  }\\n}",\n\t\t\t\t\t\t"variables": "{\\n    \\"filter\\": \\"id in (\\\\\\"FR557\\\\\\", \\\\\\"TB655\\\\\\")\\"\\n}"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "Create Inventory",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "mutation {\\n    createItemSet(\\n        input: [\\n            {\\n                tracker_serial: \\"E2801191A503006903FFC904\\"\\n                item_number: \\"FL7M-10K6WE-910Z\\"\\n            },\\n            {\\n                tracker_serial: \\"E2801191A503006903FFC9A4\\"\\n                item_number: \\"FL7M-10J6W-CN03\\"\\n            },\\n            {\\n                tracker_serial: \\"E2801191A503006903FFC994\\"\\n                item_number: \\"FL7M-10J6W-CN03\\"\\n            },\\n            {\\n                tracker_serial: \\"E2801191A503006903FFC9E4\\"\\n                item_number: \\"FL7M-15Y6W-910\\"\\n            },\\n            {\\n                tracker_serial: \\"E2801191A503006903FFC9D4\\"\\n                item_number: \\"FL7M-15Y6W-910\\"\\n            }\\n        ]\\n    ) {\\n        tracker_serials\\n    }\\n}",\n\t\t\t\t\t\t"variables": ""\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t},\n\t\t{\n\t\t\t"name": "List Inventory",\n\t\t\t"request": {\n\t\t\t\t"auth": {\n\t\t\t\t\t"type": "noauth"\n\t\t\t\t},\n\t\t\t\t"method": "POST",\n\t\t\t\t"header": [\n\t\t\t\t\t{\n\t\t\t\t\t\t"key": "Authorization",\n\t\t\t\t\t\t"value": "{{token}}",\n\t\t\t\t\t\t"type": "text"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t"body": {\n\t\t\t\t\t"mode": "graphql",\n\t\t\t\t\t"graphql": {\n\t\t\t\t\t\t"query": "query inventory ($filter: String, $nextToken: String) {\\n  inventory(input: { filter: $filter, nextToken: $nextToken }) {\\n    inventory {\\n      id\\n      name\\n      description\\n      part {\\n        id\\n        name\\n      }\\n      trackerSerial\\n      lastUpdatedDate\\n      creationDate\\n      state\\n      isConsumed\\n      consumedDate\\n    }\\n    nextToken\\n  }\\n}",\n\t\t\t\t\t\t"variables": "{\\n    \\"filter\\": \\"state==\\\\\\"removed\\\\\\" and lastUpdatedDate >= 1736535539743\\"\\n}"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t"url": {\n\t\t\t\t\t"raw": "https://api.xemelgo.com/graphql",\n\t\t\t\t\t"protocol": "https",\n\t\t\t\t\t"host": [\n\t\t\t\t\t\t"api",\n\t\t\t\t\t\t"xemelgo",\n\t\t\t\t\t\t"com"\n\t\t\t\t\t],\n\t\t\t\t\t"path": [\n\t\t\t\t\t\t"graphql"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t"response": []\n\t\t}\n\t]\n}\n'})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"errors-2",children:(0,s.jsx)("span",{style:{color:"#0D8CFF"},children:"Errors"})}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Error"}),(0,s.jsx)(e.th,{children:"Code"}),(0,s.jsx)(e.th,{children:"Description"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Expired token"}),(0,s.jsx)(e.td,{children:"401"}),(0,s.jsx)(e.td,{children:"Unauthorized"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Invalid token"}),(0,s.jsx)(e.td,{children:"401"}),(0,s.jsx)(e.td,{children:"Unauthorized"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Missing Authorization Header"}),(0,s.jsx)(e.td,{children:"401"}),(0,s.jsx)(e.td,{children:"Unauthorized"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Duplicate Part IDs"}),(0,s.jsx)(e.td,{children:"400"}),(0,s.jsx)(e.td,{children:"Part IDs must be unique"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Invalid String or JSON"}),(0,s.jsx)(e.td,{children:"400"}),(0,s.jsx)(e.td,{children:"Malformed request"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsxs)(e.td,{children:["Missing required ",(0,s.jsx)(e.code,{children:"fileContent"})," field"]}),(0,s.jsx)(e.td,{children:"400"}),(0,s.jsx)(e.td,{children:"Required field missing"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"Inventory Part Exists"}),(0,s.jsx)(e.td,{children:"409"}),(0,s.jsx)(e.td,{children:"Inventory part already exists"})]})]})]}),"\n",(0,s.jsx)(e.h3,{id:"example-error-responses",children:"Example Error Responses"}),"\n",(0,s.jsx)(e.h4,{id:"expired-token-1",children:"Expired Token:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "errorType": "UnauthorizedException",\n      "message": "Token has expired."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h4,{id:"invalid-token-1",children:"Invalid Token:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "errors": [\n    {\n      "errorType": "UnauthorizedException",\n      "message": "Unable to parse JWT token."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsxs)(e.h4,{id:"missing-required-field-filecontent",children:["Missing Required Field (",(0,s.jsx)(e.code,{children:"fileContent"}),")"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "data": null,\n  "errors": [\n    {\n      "message": "Validation error: Missing required field \'fileContent\'."\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.hr,{})]})}function h(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(c,{...t})}):c(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>d,x:()=>l});var r=n(6540);const s={},i=r.createContext(s);function d(t){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:d(t.components),r.createElement(i.Provider,{value:e},t.children)}}}]);